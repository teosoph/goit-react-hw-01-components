{"version":3,"sources":["Components/Profile/Profile.module.css","Components/Statistics/Statistics.module.css","Components/FriendList/FriendListItem/FriendListItem.module.css","Components/Transactions/Transactions.module.css","Components/FriendList/FriendsList.module.css","Components/Profile/Profile.js","Components/Statistics/Statistics.js","Components/FriendList/FriendListItem/FriendListItem.js","Components/FriendList/FriendsList.js","Components/Transactions/Transactions.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","item","label","quantity","followers","views","likes","defaultProps","colorGen","map","Math","floor","random","r","g","b","Statistics","title","statistics","list","style","backgroundColor","percentage","id","FriendListItem","isOnline","online","offline","FriendList","friends","TransactionHistory","items","type","amount","currency","App","color","textShadow","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc16f91a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2SlMH\",\"description\":\"Profile_description__3vYmv\",\"avatar\":\"Profile_avatar__2qQuh\",\"name\":\"Profile_name__uA5bx\",\"tag\":\"Profile_tag__cLnK0\",\"location\":\"Profile_location__105hz\",\"stats\":\"Profile_stats__1Rnvv\",\"item\":\"Profile_item__27Jjq\",\"label\":\"Profile_label__10dLL\",\"quantity\":\"Profile_quantity__3Cf_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2337R\",\"title\":\"Statistics_title__3EIre\",\"list\":\"Statistics_list__3PzUA\",\"item\":\"Statistics_item__1Ym2g\",\"label\":\"Statistics_label__39U63\",\"percentage\":\"Statistics_percentage__2lQGG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3tlUy\",\"avatar\":\"FriendListItem_avatar__3HplO\",\"name\":\"FriendListItem_name__172Lj\",\"online\":\"FriendListItem_online__1vC9S\",\"offline\":\"FriendListItem_offline__3rvA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"Transactions_transaction-history__3-vti\",\"title\":\"Transactions_title__CZrlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendsList_friend-list__GaE7y\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Profile.module.css\";\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img className={styles.avatar} src={avatar} alt=\"User avatar\" />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.item}>\n          <span className={styles.label}>Followers: </span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.label}>Views: </span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.label}>Likes: </span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.defaultProps = {\n  avatar:\n    \"https://u7.uidownload.com/vector/370/347/vector-pianobrad-avatar-svg.jpg\",\n  tag: \"empty\",\n  location: \"empty\",\n  stats: {\n    followers: 0,\n    views: 0,\n    likes: 0,\n  },\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  alt: PropTypes.string,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nfunction colorGen() {\n  const [r, g, b] = [1, 1, 1].map(() => {\n    return Math.floor(Math.random() * 256);\n  });\n  return `rgb(${r},${g},${b})`;\n}\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.list}>\n        {stats.map((item) => {\n          return (\n            <li\n              className={styles.item}\n              key={item.id}\n              style={{ backgroundColor: colorGen() }}\n            >\n              <span className={styles.label}>{item.label}</span>\n\n              <span className={styles.percentage}>{item.percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.defaultProps = {\n  stats: [],\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport styles from \"./FriendListItem.module.css\";\n\nconst FriendListItem = ({ avatar, name, isOnline, id }) => (\n  <li className={styles.item} key={id}>\n    <span className={isOnline ? styles.online : styles.offline}></span>\n    <img className={styles.avatar} src={avatar} alt={name} />\n    <p className={styles.name}>{name}</p>\n  </li>\n);\n\nFriendListItem.defaultProps = {};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n  id: PropTypes.string,\n}.isRequired;\n\nexport default FriendListItem;\n","// import PropTypes from \"prop-types\";\nimport FriendListItem from \"./FriendListItem/FriendListItem\";\n\nimport styles from \"./FriendsList.module.css\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles[\"friend-list\"]}>\n      {friends.map(({ avatar, name, isOnline, id }) => {\n        return (\n          <FriendListItem\n            avatar={avatar}\n            name={name}\n            isOnline={isOnline}\n            key={id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\nexport default FriendList;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Transactions.module.css\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles[\"transaction-history\"]}>\n      <thead>\n        <tr className={styles.title}>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => {\n          return (\n            <tr key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.defaultProps = {\n  items: [],\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.number,\n      currency: PropTypes.string,\n    }).isRequired\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from \"./Components/Profile/Profile\";\nimport user from \"./Components/Profile/user.json\";\n\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport statisticalData from \"./Components/Statistics/statistical-data.json\";\n\nimport FriendList from \"./Components/FriendList/FriendsList\";\nimport friends from \"./Components/FriendList/friends.json\";\n\nimport TransactionHistory from \"./Components/Transactions/Transactions\";\nimport transactions from \"./Components/Transactions/transactions.json\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1 style={{ color: \"white\", textShadow: \"1px 1px 2px rgb(0, 0, 0)\" }}>\n        PROFILE {user.name}\n      </h1>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}